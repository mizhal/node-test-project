QuestLog

FOCO========
  [DONE] Extraer el Diario a un submodulo con el origin en el Libro Negro con todos los demás diarios.
  [TODO] Implementar el modulo de combate para la vista de editor
    He visto que puedo implementar el modulo de combate solo con dependencia del modulo de usuarios.
    Conviene implementarlo para hacer la vista de editor que ya está definida.
    .
    .
  #00028 FEAT Diseño
    Realizar unos esquemas de diseño en la libreta y con photoshop en lo posible.
    JOURNAL:
      #{1} Mon Jun 15 11:08:01 2015
        La idea para el Dashboard es presentar esta información en bloques horizontales dispuestos verticalmente:
          - Entregas pendientes: 
            Con nombre, deadline, enlace. 
            Normalmente solo hay una, la de la ronda en curso pero a veces se pueden superponer varias si se convocan rondas especiales.
          - Entregas corregidas:
            Con "nota" y botón de acción para reclamar.
          - Tareas pendientes:
            Son trabajos que quedan por corregir. Cada uno con su deadline.
          - Tareas completadas:
            Trabajos completados que el usuario puede volver a revisar antes de su entrega. Sólamente se muestran las completadas no entregadas.


      .
      .
    TRACK:
      [TODO] Dashboard
        [DONE] Planteamiento esquemático web (wireframe a mano)
        [TODO] PSD web
        [TODO] Planteamiento esquemático móvil
        [TODO] PSD móvil
      [TODO] Editor
        [DONE] Planteamiento esquemático web (wireframe a mano)
        [TODO] PSD web
          [DONE] Maqueta principal
          [TODO] Crear panel lateral de manejo de errores
            El que contiene las acciones de info, editar, borrar, reclamar, etc
            Info muestra un popup con el historial del error.
          [TODO] Crear Popups de interacción
            [TODO] Popup de entrada de categoría de un error (y comentario)
            [TODO] Popup de reclamación
          [TODO] Replantear el PAD
            Queda muy grande y un poco deslavazado.
        [DONE] Planteamiento esquemático movil (wireframe a mano)
        [TODO] PSD móvil
        [TODO] Maqueta en HTML (versión web)
      .
      .
    REFERENCIAS:
      [001] 50 Useful UI Design Free PSD Files
        http://graphicdesignjunction.com/2013/06/psd-files-for-ui-design/
      [002] 59 Free PSD UI Kits For Web & Mobile App
        http://bashooka.com/photoshop/free-psd-ui-kits-web-mobile-app/
      [003] Flat Style & IOS 7 Line Style UI Kit PSD
        http://www.graphicsfuel.com/2013/11/flat-style-ios-7-line-style-ui-kit-psd/
      [004] Flat UI Colors
        http://flatuicolors.com/
      [005] Sitio interesante con iconos planos
        http://www.flaticon.com/
      .
      .
  #00027 FEAT  Crear máquina virtual y setup de producción
    RAMA: feat#00027/maquina-virtual-y-setup-de-produccion

  #00016 FEAT Autenticacion y Autorizacion: Usuarios y Roles
    RAMA: feat#00016/autentificacion-y-autorizacion-usuarios-y-roles

    [DONE] Modelos de usuarios y roles
      [DONE] Encriptar la clave
        Junto con callbacks del modelo para realizar la encriptación al salvar o bien mediante getters y setters.
    [TODO] UI de Usuarios y Roles
      [TODO] Problema de filtrar los campos, si quiero meter roles va asíncrono.
    .
    .
  #00018 FEAT Back: Datos Alumno
    Crear el endpoint de datos de alumno, asegurando que asimismo tiene un Usuario subsidiario que autoriza al uso de la aplicación.
      .
      .
    RAMA: feat#0001/modulo-gestion-alumnos-grupos
      .
      .
    JOURNAL
      En la rama de Git se ha mergeado el modelo/endpoint de Usuario y la migración asociada.
    .
    .
ACTIVAS=====
  #00010 FEAT Comun: Filtro y Sort (server side) en las tablas ui-grid/ngGrid
    RECURSOS:
      [001] Stack Overflow: Server-side paging+filtering+sorting for ng-grid with WebAPI
        http://stackoverflow.com/questions/17786091/server-side-pagingfilteringsorting-for-ng-grid-with-webapi

    [DONE] modificar la api para que el index acepte parametros y paginación.
      Se usa el parametro "filter" con query string que pa eso está
    [TODO] Integrar las funciones de ui-grid con la api paginada y filtrada.
      UI-grid/ngGrid tiene soporte explícito para filtrado y para paginación con el servidor.
    .
    .
  #002 - Integrar node-debug con grunt
    Intentar que todo vaya como la seda invocando "grunt serve:debug"
    .
    .
  #00003 FEAT UI de gestión de Datos Alumno
    RAMA: todavia no iniciado
    Vistas:
      - Detalle del Alumno
      - Listado de Alumnos (sin cursos)
      - Creación y Edición de Alumno
    .
    .
SUGERENCIAS=
	Explorar MEAN.js
		http://meanjs.org/
	Explorar AngularUI
		https://angular-ui.github.io/
	Explorar node-postgres
		https://github.com/brianc/node-postgres
BLOQUEADAS==
COMPLETAS===
  [DONE] Evitar que se envien las relaciones mediante json
    La extensión virtual fields permite tratar las relaciones como atributos normales, incluso filtrarlos con "attributes"
  [DONE] Subsumir el endpoint de roles en usuarios.
  #003 - Incorporar MULTER al Generador
    JOURNAL:
    TASKS:
      [DONE] Añadir la librería a la plantilla del package.json
      [DONE] Modificar express.js para instalar el middleware
    .
    .
  #00014 FEAT Integrar sequelize
    [DONE] Script de preparacion de la base de datos
      1. Conectar y crear el usuario y la bd de proyecto directamente con el plugin de postgresql.
      2. Después hacer la conexion "estándar" con Sequelize y lanzar migraciones o sincronizar las tablas.
    [DONE] Scripts de creación del usuario inicial y de la base de datos
    [DONE] Integrar sequelize con la app (conectar, sincronizar tablas, etc) 
      Se han modificado los controladores y modelos. 
    [DONE] Actualizar el generador.
    [DONE] Preparar el sistema de migraciones.
      Ya está implementado.
    [DONE] Ver si se pueden lanzar migraciones con comandos SQL raw.
  #00004  FEAT  OPEN  Modulo de Traducciones (lib + back + front)
    :FECHA_FIN: 26/05/2015
    Integrar angular-translate
    AngularJS tiene soporte para traduccion de fechas y moneda a través de filtros, pero no para traducción de claves.
    No parece haber muchas más opciones.
      [DONE] Crear una vista Grid con todas las traducciones (index de admin) y conectarla con el servicio web usando componentes de angular ui.
      [DONE] Creación y edicion de traducciones
        [DONE] vista de creación y comprobación de que funciona.
        [DONE] vista de edición

	[done] cambiar el router por uiRoute
	feat#001 - Subir archivos en los modelos que llevan archivos adjuntos
		Explorar el mecanismo de subida de archivos e implementar la subida desde el cliente con el modelo de alumnos que tiene una foto/icono asociada.
			[DONE] Usar multer para subida de archivos
				BRANCH: feat#0002/instalar-multer
			[DONE] Experimentar la manera de gestionar la creacion:
				Alternativas:
					1. Subida en dos fases
						- primero archivo, retornar ID asociar la ID al registro.
						- segundo datos JSON, lleva la ID del archivo asociado.
					2. Formulario
						- enviar los datos de alumno como campos de formulario (urlencoded)
						- enviar el archivo como otro campo más del formulario
			
				RESULT: Se puede hacer "facil" enviando los campos como elementos de formulario. bodyParser los parsea adecuadamente. Luego para vincular los archivos que están en req.files se debería usar otro método attach (por ejemplo) con algun tipo de plugin para Sequelize/Mongoose.
			[DONE] Implementar una rutina para gestionar los archivos adjuntos usando las callbacks de ciclo de vida del modelo
				Es necesario pasar como opciones los campos y el path de destino donde quedarán los archivos
	ALT#0001 Plugin de gestión de adjuntos para mongoose.
		Mongoose soporta plugins de manera sencilla, como se puede ver en http://mongoosejs.com/docs/plugins.html
		El mecanismo del plugin consistiría en:
			- mover el archivo temporal a un archivo definitivo SI NO FALLA LA VALIDACIÓN
			- nombrar en el archivo definitivo de tal manera que se vincule con el modelo, campo e id asociado
			- borrar el archivo (O NO SEGUN LAS CONDICIONES DE BORRADO LOGICO) al destruir el objeto dueño.
FALLIDAS====
REGISTRO====
	#001 - Subir archivos en los modelos que llevan archivos adjuntos
		Explorar el mecanismo de subida de archivos e implementar la subida desde el cliente con el modelo de alumnos que tiene una foto/icono asociada.